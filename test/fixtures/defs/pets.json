{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "name": "Wordnik API Team"
        },
        "license": {
            "name": "MIT"
        }
    },
    "host": "petstore.swagger.wordnik.com",
    "basePath": "/v1/petstore",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/pets": {
            "x-handler": "extensions/pets.js",
            "get": {
                "description": "Returns all pets from the system that the user has access to",
                "operationId": "findPets",
                "x-handler": "extensions/pets.js",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "default": ["read"]
                    }
                ],
                "jsonp": "callback",
                "cache":{
                  "statuses":[200]
                },
                "config": {
                  "plugins": {
                    "policies": ["isLoggedIn", "addTracking", "logThis"]
                  }
                },
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "tags to filter by",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new pet in the store.  Duplicates are allowed",
                "operationId": "addPet",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "default": ["write"]
                    }
                ],
                "parameters": [
                    {
                        "name": "pet",
                        "in": "body",
                        "description": "Pet to add to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pets/{id}": {
            "get": {
                "description": "Returns a user based on a single ID, if the user does not have access to the pet",
                "operationId": "findPetById",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "default": ["read"]
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single pet based on the ID supplied",
                "operationId": "deletePet",
                "security": [
                    {
                        "default": ["write"]
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "pet deleted"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pets/{id}/items": {
            "get": {
                "description": "Returns all pet's items based on the pet ID supplied.",
                "operationId": "findItemOfPet",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "default": ["read"]
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Item"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new item for pet.",
                "operationId": "createItemForPet",
                "security": [
                    {
                        "default": ["write"]
                    }
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "body",
                        "description": "Item to add to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    {
                        "name": "date",
                        "in": "header",
                        "description": "Operation date",
                        "required": true,
                        "type": "string",
                        "format": "dateTime"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "parameters": [
                {"$ref": "#/parameters/id"},
                {
                    "name": "date",
                    "in": "header",
                    "description": "Operation date",
                    "required": false,
                    "type": "string",
                    "format": "dateTime"
                }
            ]
        }
    },
    "parameters": {
        "id": {
            "name": "id",
            "in": "path",
            "description": "Pet id",
            "required": true,
            "type": "integer",
            "format": "int64"
        }
    },
    "securityDefinitions": {
        "default": {
            "type": "oauth2",
            "scopes": {
                "read": "read pets.",
                "write": "write pets."
            },
            "x-authorize": "extensions/authorize_default.js"
        },
        "secondary": {
            "type": "oauth2",
            "scopes": [
                "read",
                "write"
            ],
            "x-authorize": "extensions/authorize_secondary.js"
        }
    },
    "definitions": {
        "Pet": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "Item": {
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
